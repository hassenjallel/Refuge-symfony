<?php

namespace AssoBundle\Repository;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use \Doctrine\ORM\EntityRepository;
/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class messageRepository extends \Doctrine\ORM\EntityRepository
{
    public function findusersbyrole($roles)
    {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('UserBundle:User', 'u')
            ->where("u.roles LIKE :roles")
            ->setParameter('roles', '%"'.$roles.'"%');

        return $qb->getQuery()->getResult();

    }
    public function getuserdatabyUsername($user_name)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('UserBundle:User', 'u')
            ->where('u.username LIKE :username')
            ->setParameter('username', $user_name);
        return $qb->getQuery()->getResult();

    }



    public function getuserdatabyUsername2()
    {
        $q = $this->getEntityManager()->createQuery("SELECT u from UserBundle:User u where u.roles='ROLE_FAMILLE' " );
        return $query = $q->getResult();
    }
public function findloginEnvoi($loginEnvoi){

    $q = $this->getEntityManager()->createQuery("SELECT  p.username ,p.image from UserBundle:User p where p.roles='a:1:{i:0;s:12:\"ROLE_FAMILLE\";}' and (p.username !=:loginenvoi) " )
    ->setParameter('loginenvoi',$loginEnvoi);

    return $query = $q->getResult();
}


    public function findlogin(){
//  a:1:{i:0;s:16:"ROLE_ASSOCIATION";}
        $q = $this->getEntityManager()->createQuery("SELECT  p.username from UserBundle:User p where p.roles='a:1:{i:0;s:12:\"ROLE_FAMILLE\";}'  " );

        return $query = $q->getResult();
    }
    public function findlogiasso(){
//  a:1:{i:0;s:16:"ROLE_ASSOCIATION";}
        $q = $this->getEntityManager()->createQuery("SELECT  p.username from UserBundle:User p where p.roles='a:1:{i:0;s:12:\"ROLE_FAMILLE\";}'  " );

        return $query = $q->getResult();
    }
    public function findloginfam(){
//  a:1:{i:0;s:16:"ROLE_ASSOCIATION";}
        $q = $this->getEntityManager()->createQuery("SELECT  p.username from UserBundle:User p where p.roles='a:1:{i:0;s:16:\"ROLE_ASSOCIATION\";}'  " );

        return $query = $q->getResult();
    }

    public function img($idMessage){
        $q = $this->getEntityManager()->createQuery("SELECT  p.image from UserBundle:User p where p.id=:loginrecep  " )
        ->setParameter('loginrecep',$idMessage);
        return $query = $q->getResult();
    }


public function getMesage(  $loginenvoi , $loginrecep ){
        $q = $this -> getEntityManager()->createQuery("SELECT u  FROM AssoBundle:message u 
             where 
               (u.loginEnvoi =:loginenvoi or u.loginEnvoi =:loginrecep )
             and( u.loginRecep =:loginenvoi or u.loginRecep =:loginrecep ) order by u.date  ")
       //     ->setParameter('idenvoi',$idenvoi)
          //  ->setParameter('idrecep',$idrecep)
            ->setParameter('loginenvoi',$loginenvoi)
            ->setParameter('loginrecep',$loginrecep)

;

        return $query = $q -> getResult();
}

    public function getMesagemob(  $loginenvoi , $loginrecep ){
        $q = $this -> getEntityManager()->createQuery("SELECT u.message,u.role,u.loginEnvoi , u.loginRecep FROM AssoBundle:message u
             where
               (u.loginEnvoi =:loginenvoi or u.loginEnvoi =:loginrecep )
             and( u.loginRecep =:loginenvoi or u.loginRecep =:loginrecep ) order by u.date  ")
            //     ->setParameter('idenvoi',$idenvoi)
            //  ->setParameter('idrecep',$idrecep)
            ->setParameter('loginenvoi',$loginenvoi)
            ->setParameter('loginrecep',$loginrecep)

        ;

        return $query = $q -> getResult();
    }


    public function findIdByUsername($loginRecep)
    {
        $q = $this->getEntityManager()->createQuery("SELECT u.idRecep from AssoBundle:message u where u.loginRecep=:loginRecep " )
            ->setParameter('loginRecep',$loginRecep)
        ;
        return $query = $q->getResult();
    }









    public function chatbot($loginEnvoi){

        $q = $this->getEntityManager()->createQuery("SELECT distinct p.loginEnvoi from AssoBundle:message p where p.role='Famille' and (p.loginEnvoi !=:loginenvoi) " )
            ->setParameter('loginenvoi',$loginEnvoi);

        return $query = $q->getResult();
    }




}

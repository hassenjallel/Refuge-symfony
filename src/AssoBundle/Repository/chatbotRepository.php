<?php

namespace AssoBundle\Repository;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use \Doctrine\ORM\EntityRepository;
/**
 * chatbotRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class chatbotRepository extends \Doctrine\ORM\EntityRepository
{
    public function findusersbyrole($roles)
    {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('UserBundle:User', 'u')
            ->where("u.roles LIKE :roles")
            ->setParameter('roles', '%"'.$roles.'"%');

        return $qb->getQuery()->getResult();

    }
    public function getuserdatabyUsername($user_name)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('UserBundle:User', 'u')
            ->where('u.username LIKE :username')
            ->setParameter('username', $user_name);
        return $qb->getQuery()->getResult();

    }


    public function getMesage(  $loginenvoi , $loginrecep ){
        $q = $this -> getEntityManager()->createQuery("SELECT u FROM AssoBundle:message u
             where
               (u.loginEnvoi =:loginenvoi or u.loginEnvoi =:loginrecep )
             and( u.loginRecep =:loginenvoi or u.loginRecep =:loginrecep ) order by u.date  ")
            //     ->setParameter('idenvoi',$idenvoi)
            //  ->setParameter('idrecep',$idrecep)
            ->setParameter('loginenvoi',$loginenvoi)
            ->setParameter('loginrecep',$loginrecep)

        ;

        return $query = $q -> getResult();
    }











    public function findanswer2($requestString){

        $q = $this->getEntityManager()->createQuery("SELECT p.messagechatbot from AssoBundle:chatbot p where p.messageuser=:msg " )
            ->setParameter('msg',$requestString);
        return $query = $q->getResult();
    }
    public function findanswer($requestString)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('AssoBundle:chatbot', 'u')
            ->where('u.messageuser =:messageuser')
            ->setParameter('messageuser', $requestString);
  return $qb->getQuery()->getResult();

    }

    public function getmsg($entities){

        $q = $this->getEntityManager()->createQuery("SELECT p.messagechatbot from AssoBundle:chatbot p where p.messagechatbot=:msg " )
            ->setParameter('msg',$entities);
        return $query = $q->getResult();
    }

}

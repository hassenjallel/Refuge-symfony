
{% extends 'homeasso.html.twig' %}

{% block content %}



    </div>
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-12">
                </div><!-- .col -->
            </div><!-- .row -->
        </div><!-- .container -->
    </div><!-- .page-header -->

    <div class="contact-page-wrap">
        <div class="container">
            <div class="row">
                <div class="col-12 col-lg-5">
                    <div class="entry-content">
                        <h2>Get In touch with us</h2>

                        <p></p>
                        <ul class="contact-social d-flex flex-wrap align-items-center">
                            <li><a href="#"><i class="fa fa-pinterest-p"></i></a></li>
                            <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                            <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                            <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
                            <li><a href="#"><i class="fa fa-behance"></i></a></li>
                            <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
                        </ul>

                        <ul class="contact-info p-0">
                            <li><i class="fa fa-phone"></i><span>+216 24 933 784</span></li>
                            <li><i class="fa fa-envelope"></i><span>Solidarity.refugee@gmail.com</span></li>
                            <li><i class="fa fa-map-marker"></i><span>Z.I. Chotrana II B.P. 160,PÃ´le Technologique El Ghazela - Ariana 2083
                            </span>  </ul>
                    </div>
                </div><!-- .col -->

                <div class="col-12 col-lg-7">



                        <div id='bodybox'>
                            <div id='chatborder'>

                                <p id="chatlog12" class="chatlog">&nbsp;</p>
                                <p id="chatlog11" class="chatlog">&nbsp;</p>
                                <p id="chatlog10" class="chatlog">&nbsp;</p>
                                <p id="chatlog9" class="chatlog">&nbsp;</p>
                                <p id="chatlog8" class="chatlog">&nbsp;</p>
                                <p id="chatlog7" class="chatlog">&nbsp;</p>
                                <p id="chatlog6" class="chatlog">&nbsp;</p>
                                <p id="chatlog5" class="chatlog">&nbsp;</p>
                                <p id="chatlog4" class="chatlog">&nbsp;</p>
                                <p id="chatlog3" class="chatlog">&nbsp;</p>
                                <p id="chatlog2" class="chatlog">&nbsp;</p>
                                <p id="chatlog1" class="chatlog">&nbsp;HEllo !! </p>
                                <input type="text" name="chat" id="chatbox" placeholder="Hi there! Type here to talk to me." onfocus="placeHolder()">
                            </div>
                            <br>
                            <br>


                            <center><img src="https://lilgreenland.github.io/images/BMO.jpg" align="middle"></center>
                        </div>








                </div><!-- .col -->

                <div class="col-12">
                    <div class="contact-gmap">
                    </div>
                </div>
            </div><!-- .row -->
        </div><!-- .container -->
    </div>



















    <style class="cp-pen-styles">


    body {
        font: 15px arial, sans-serif;
        background-color: #d9d9d9;
        padding-top: 15px;
        padding-bottom: 15px;
    }

    #bodybox {
        margin: auto;
        max-width: 550px;
        font: 15px arial, sans-serif;
        background-color: white;
        border-style: solid;
        border-width: 1px;
        padding-top: 20px;
        padding-bottom: 25px;
        padding-right: 25px;
        padding-left: 25px;
        box-shadow: 5px 5px 5px grey;
        border-radius: 15px;
    }

    #chatborder {
        border-style: solid;
        background-color: #f6f9f6;
        border-width: 3px;
        margin-top: 20px;
        margin-bottom: 20px;
        margin-left: 20px;
        margin-right: 20px;
        padding-top: 10px;
        padding-bottom: 15px;
        padding-right: 20px;
        padding-left: 15px;
        border-radius: 15px;
    }

    .chatlog {
        font: 15px arial, sans-serif;
    }

    #chatbox {
        font: 17px arial, sans-serif;
        height: 22px;
        width: 100%;
    }

    h1 {
        margin: auto;
    }

    pre {
        background-color: #f0f0f0;
        margin-left: 20px;
    }
</style>


    <script type="text/javascript" >

    //links
    //http://eloquentjavascript.net/09_regexp.html
    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions


    var messages = [], //array that hold the record of each string in chat
    lastUserMessage = "", //keeps track of the most recent input string from the user
    botMessage = "", //var keeps track of what the chatbot is going to say
    botName = 'Admin', //name of the chatbot
    username = '{{app.user.username}}'
        talking = true; //when false the speach function doesn't work
    //
    //
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //edit this function to change what the chatbot says
    function chatbotResponse() {
    talking = true;
    botMessage = "I'm confused"; //the default message

    if (lastUserMessage === 'hi' || lastUserMessage === 'hi!' || lastUserMessage === 'hi !' || lastUserMessage =='hello' || lastUserMessage =='hello!' || lastUserMessage =='hello !') {
    botMessage = 'Hi '+  '{{app.user.username}}'    +', how are you today? Please feel free to tell me your question briefly so that I could assist you well';
    }

    if (lastUserMessage === 'how are you ?' || lastUserMessage === 'how are you !' || lastUserMessage === 'how r u ?' || lastUserMessage === 'how r u !') {
    botMessage = 'I m fine, thank you. And you? :)';
    }
        if (lastUserMessage === 'name') {
            botMessage = 'My name is ' + '{{app.user.username}}';
            //    botMessage = 'bara makhyebek w makhyeb rasik !!! hahahahahahaha     is there anything else I can do for you ';
        }
        if (lastUserMessage === 'fine' || lastUserMessage === 'thanks'|| lastUserMessage === 'good' ) {
            botMessage = 'Yes, I m glad to hear that. And aside from this, where could i redirect you ?'+'<br>'+'just type the page name ';
        }
        if (lastUserMessage === 'fine' || lastUserMessage === 'thanks' ) {
            botMessage = 'Yes, I m glad to hear that. And aside from this, where could i redirect you ?';
        }
        if (lastUserMessage === 'ok' ) {
            botMessage = 'I m glad to help you. Could you please specify your concerns in details so that i can assist you better? '+'<br>'+'just type the page name ' ;
        }
        if (lastUserMessage === 'family' || lastUserMessage === 'list family' ) {
            botMessage = "<a  href='{{ path('show_famille'  ) }}'> check this link</a>";
        }
        if (lastUserMessage === 'profil'  ) {
            botMessage = "<a  href='{{ path('fos_user_profile_show_asso'  ) }}'> check this link</a>";
        }
        if (lastUserMessage === 'log out' || lastUserMessage === 'out'  ) {
            botMessage = "<a  href='{{ path('fos_user_security_logout'  ) }}'> check this link</a>";
        }
        if (lastUserMessage === 'message' || lastUserMessage === 'messages' || lastUserMessage === 'conversation'  ) {
            botMessage = "<a  href='{{ path('message' ,{ 'loginEnvoi': app.user.username }  ) }}'> check this link</a>";
        }




    }

    //****************************************************************
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //****************************************************************
    //
    //
    //
    //this runs each time enter is pressed.
    //It controls the overall input and output
    function newEntry() {
    //if the message from the user isn't empty then run

    if (document.getElementById("chatbox").value != "") {
    //pulls the value from the chatbox ands sets it to lastUserMessage
    lastUserMessage = document.getElementById("chatbox").value;
    //sets the chat box to be clear
    document.getElementById("chatbox").value = "";
    //adds the value of the chatbox to the array messages
    messages.push( "<b>" + username + ":</b> " +lastUserMessage);
    //Speech(lastUserMessage);  //says what the user typed outloud
    //sets the variable botMessage in response to lastUserMessage
    chatbotResponse();
    //add the chatbot's name and message to the array messages
    messages.push("<b>" + botName + ":</b> " + botMessage);
    // says the message using the text to speech function written below
    Speech(botMessage);
    //outputs the last few array elements of messages to html
    for (var i = 1; i < 8; i++) {
    if (messages[messages.length - i])
    document.getElementById("chatlog" + i).innerHTML = messages[messages.length - i];
    }
    }
    }

    //text to Speech
    //https://developers.google.com/web/updates/2014/01/Web-apps-that-talk-Introduction-to-the-Speech-Synthesis-API
    function Speech(say) {
    if ('speechSynthesis' in window && talking) {
    var utterance = new SpeechSynthesisUtterance(say);
    //msg.voice = voices[10]; // Note: some voices don't support altering params
    //msg.voiceURI = 'native';
    //utterance.volume = 1; // 0 to 1
    //utterance.rate = 0.1; // 0.1 to 10
    //utterance.pitch = 1; //0 to 2
    //utterance.text = 'Hello World';
    //utterance.lang = 'en-US';
    speechSynthesis.speak(utterance);
    }
    }

    //runs the keypress() function when a key is pressed
    document.onkeypress = keyPress;
    //if the key pressed is 'enter' runs the function newEntry()
    function keyPress(e) {
    var x = e || window.event;
    var key = (x.keyCode || x.which);
    if (key == 13 || key == 3) {
    //runs this function when enter is pressed
    newEntry();
    }
    if (key == 38) {
    console.log('hi')
    //document.getElementById("chatbox").value = lastUserMessage;
    }
    }

    //clears the placeholder text ion the chatbox
    //this function is set to run when the users brings focus to the chatbox, by clicking on it
    function placeHolder() {
    document.getElementById("chatbox").placeholder = "";
    }
    </script>
















{% endblock %}

